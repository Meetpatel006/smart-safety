name: Build and Release Android

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build Android Artifacts
    runs-on: ubuntu-latest
    timeout-minutes: 40

    env:
      JAVA_VERSION: '17'
      NODE_VERSION: '18'
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Derive version from tag
        id: version
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          echo "tag=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "version=${TAG_NAME#v}" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Node dependencies
        run: npm ci --legacy-peer-deps || npm install --legacy-peer-deps

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      # NEW: Generate android/ folder
      - name: Expo prebuild
        run: npx expo prebuild
        env:
          CI: 1

      - name: Make Gradle executable
        run: chmod +x android/gradlew

      - name: Build Release APK
        working-directory: android
        run: |
          ./gradlew clean
          ./gradlew assembleRelease --no-daemon --stacktrace

      - name: List outputs
        run: |
          ls -R android/app/build/outputs

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-artifacts-${{ steps.version.outputs.version }}
          path: android/app/build/outputs/apk/release/*.apk

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          files: android/app/build/outputs/apk/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
